<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.tut.dao.TutTestResultDao">

	<!-- 강의 목록 조회 -->
	<select id="testResultLectureList" resultType="kr.happyjob.study.tut.model.TutTestResultModel">
		/*kr.happyjob.study.tut.dao.TutTestResultDao.testResultLectureList*/
		  select lc.lecture_seq
		      , lc.lecture_no
		      , dc.detail_name as lecture_name
		      , ui.name
		      , lc.test_no
		      , count(case when ts.student_lecture = 'Y' then 1 end) as lecture_person
              , count(case when ts.student_test = 'Y' then 1 end) as AFT
              , count(case when ts.student_test = 'N' 
                        and ts.student_lecture = 'Y' then 1 end) as BEF
		  from tb_lecture lc
		    inner join tb_student ts on lc.lecture_seq = ts.lecture_seq
		    inner join tb_detail_code dc on dc.group_code = 'lecture_no' and dc.detail_code = lc.lecture_no
		    inner join tb_userinfo ui on lc.loginID = ui.loginID
		  <where>
		  		 lc.loginID = #{loginId}
			 <if test = "(lectureNameSearch != null) and (!lectureNameSearch.equals(''))">
				 and detail_name LIKE CONCAT('%', #{lectureNameSearch}, '%')      	
		     </if>
		  </where>
		  group by lc.lecture_seq, lc.lecture_no
	    LIMIT #{startnum}, #{pageSize}
	</select>
	
	<!-- 강의 목록 수 -->
	<select id="testResultLectureListCnt" resultType="int">
		/*kr.happyjob.study.tut.dao.TutTestResultDao.testResultLectureListCnt*/
		  select count(distinct lc.lecture_seq)
		  from tb_lecture lc
		    inner join tb_student ts on lc.lecture_seq = ts.lecture_seq
		    inner join tb_detail_code dc on dc.group_code = 'lecture_no' and dc.detail_code = lc.lecture_no
		    inner join tb_userinfo ui on lc.loginID = ui.loginID
		  <where>
		  		 lc.loginID = #{loginId}
			 <if test = "(lectureNameSearch != null) and (!lectureNameSearch.equals(''))">
				 and detail_name LIKE CONCAT('%', #{lectureNameSearch}, '%')      	
		     </if>
		  </where>
	</select>
	
	<!-- 학생 목록 조회 -->
	 <select id="testStudentSelectList" resultType="kr.happyjob.study.tut.model.TutTestResultModel">
		/*kr.happyjob.study.tut.dao.TutTestResultDao.testStudentSelectList*/
		  SELECT 	lc.lecture_seq ,
          			lc.lecture_no,
          			lc.test_no ,
          			tr.loginID ,
          			tr.name,
          SUM(tr.SCORE) AS 'SCORE'
  		  FROM 	tb_lecture lc 
  		  INNER JOIN ( SELECT lc.lecture_seq ,
							  tr.test_no ,
							  tr.question_no ,
							  tr.loginID ,
                      		  ui.name,
							  CASE
							   WHEN tr.result_answer = tq.question_answer
							    THEN tq.question_score
							     ELSE 0
								  END 'SCORE'
					  FROM 		 tb_lecture lc 
                      INNER JOIN tb_question tq ON lc.test_no = tq.test_no
					  INNER JOIN tb_result tr ON lc.lecture_seq = tr.lecture_seq 
                      INNER JOIN tb_userinfo ui on tr.loginID = ui.loginID
											AND tq.question_no = tr.question_no 
											AND tq.test_no = tr.test_no
											AND lc.test_no = tr.test_no
					  GROUP BY 	lc.lecture_seq , tr.test_no , tr.loginID , tr.question_no ) tr ON lc.lecture_seq = tr.lecture_seq 
			WHERE lc.lecture_seq = #{lectureNo} 
		 	GROUP BY lc.lecture_seq , lc.test_no , tr.loginID
		 	LIMIT #{startnum}, #{pageSize}
	</select> 
	
	<!-- 학생 목록 수 -->
	 <select id="testStudentSelectListCnt" resultType="int">
		/*kr.happyjob.study.tut.dao.TutTestResultDao.testStudentSelectListCnt*/
			SELECT 	count(distinct tr.loginID)
	  		FROM 	tb_lecture lc 
	  		INNER JOIN ( SELECT lc.lecture_seq ,
											  tr.test_no ,
											  tr.question_no ,
											  tr.loginID ,
											   CASE
												WHEN tr.result_answer = tq.question_answer
												 THEN tq.question_score
												  ELSE 0
													END 'SCORE'
										FROM 		tb_lecture lc 
	                                      	INNER JOIN tb_question tq ON lc.test_no = tq.test_no
										  	INNER JOIN tb_result tr ON lc.lecture_seq = tr.lecture_seq 
												AND tq.question_no = tr.question_no 
												AND tq.test_no = tr.test_no
										GROUP BY 	lc.lecture_seq , tr.test_no , tr.loginID , tr.question_no ) tr ON lc.lecture_seq = tr.lecture_seq 
												AND lc.test_no = tr.test_no
	          INNER JOIN tb_userinfo ui on lc.loginID = ui.loginID
			  WHERE lc.lecture_seq = #{lectureNo}
	</select>
</mapper>