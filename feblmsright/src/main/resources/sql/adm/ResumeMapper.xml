<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.adm.dao.ResumeDao">

	<!-- 강의 목록 조회 -->
	<select id="resumeLectureListSearch" resultType="kr.happyjob.study.adm.model.ResumeModel">
		/*kr.happyjob.study.adm.dao.ResumeDao.resumeLectureListSearch*/
		SELECT tl.lecture_no
		      , dc.detail_name as lecture_name
		      , ui.name
		      , tl.lecture_person
		      , tl.lecture_start
		      , tl.lecture_end
		  FROM tb_lecture tl
		    inner join tb_detail_code dc on dc.group_code = 'lecture_no' and dc.detail_code = tl.lecture_no
		    inner join tb_userinfo ui on ui.loginID = tl.loginID
		  <where>
		  	 and ui.user_type = 'B'
			 <if test = "(lectureNameSearch != null) and (!lectureNameSearch.equals(''))">
				 and detail_name LIKE CONCAT('%', #{lectureNameSearch}, '%')      	
		     </if>
		  </where>
	    LIMIT #{startnum}, #{pageSize}
	</select>
	
	<!-- 강의 목록 수 -->
	<select id="resumeLectureListCnt" resultType="int">
		/*kr.happyjob.study.adm.dao.ResumeDao.resumeLectureListCnt*/
		select  count(*)
		  FROM tb_lecture tl
		    inner join tb_detail_code dc on dc.group_code = 'lecture_no' and dc.detail_code = tl.lecture_no
		    inner join tb_userinfo ui on ui.loginID = tl.loginID
		  <where>
		  	 and ui.user_type = 'B'
			 <if test = "(lectureNameSearch != null) and (!lectureNameSearch.equals(''))">
				 and detail_name LIKE CONCAT('%', #{lectureNameSearch}, '%')      	
		     </if>
		  </where>
	</select>
	
	<!-- 학생 목록 조회 -->
	<select id="resumeLectureSelect" resultType="kr.happyjob.study.adm.model.ResumeModel">
		/*kr.happyjob.study.adm.dao.ResumeDao.resumeLectureSelect*/
		select ui.loginID
		      , ui.name
		      , ui.user_hp
		      , ui.user_email
		      , ui.resume_file
		      , ui.resume_non
		      , ui.resume_mul
		  from tb_userinfo ui
		    inner join tb_student ts on ts.loginID = ui.loginID
		    inner join tb_lecture tl on tl.lecture_seq = ts.lecture_seq
		  where tl.lecture_no = #{lectureno}
		  and ts.student_lecture = 'Y'
		  group by ui.loginID
	    LIMIT #{startnum}, #{pageSize}
	</select>
	
	<!-- 학생 목록 수 -->
	<select id="resumeLectureSelectCnt" resultType="int">
		/*kr.happyjob.study.adm.dao.ResumeDao.resumeLectureSelectCnt*/
		select  count(distinct ui.loginID)
		  from tb_userinfo ui
		    inner join tb_student ts on ts.loginID = ui.loginID
		    inner join tb_lecture tl on tl.lecture_seq = ts.lecture_seq
		  where tl.lecture_no = #{lectureno}
          and ts.student_lecture = 'Y'
	</select>
	
	<!-- 이력서 다운 -->
	<select id="userinfo" resultType="kr.happyjob.study.adm.model.ResumeModel">
		/*kr.happyjob.study.adm.dao.ResumeDao.userinfo*/
		select loginID
		      , resume_file
		      , resume_mul
		  from tb_userinfo
		  where loginID = #{loginID}
	</select>

</mapper>